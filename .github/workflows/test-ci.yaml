name: test-ci

on:
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  determine-available-userenvs:
    runs-on: ubuntu-latest

    outputs:
      userenvs: ${{ steps.generate-matrix.outputs.userenvs }}

    steps:
    - name: Checkout rickshaw
      uses: actions/checkout@v2

    - name: Generate Matrix
      id: generate-matrix

      run: |
        userenvs=$(find userenvs/ -maxdepth 1 -name '*.json' | sed -e 's|userenvs/||' -e 's|\.json||')
        userenv_json="["
        for userenv in ${userenvs}; do
          userenv_json+="\"${userenv}\","
        done
        userenv_json=$(echo "${userenv_json}" | sed -e "s/,$//")
        userenv_json+="]"
        echo "userenv_json=${userenv_json}"
        echo
        echo "::set-output name=userenvs::${userenv_json}"

  display-available-userenvs:
    runs-on: ubuntu-latest

    needs: determine-available-userenvs

    steps:
    - name: Echo previous outputs
      run: echo "${{ toJSON(needs.determine-available-userenvs.outputs) }}"

  run-the-userenvs:
    runs-on: ubuntu-latest

    needs:
    - determine-available-userenvs
    - display-available-userenvs

    strategy:
      matrix:
        userenv: ${{ fromJSON(needs.determine-available-userenvs.outputs.userenvs) }}

    steps:
    - name: Matrix => (${{ matrix.userenv }})
      run: |
        sleep 10
        echo ${{ matrix.userenv }}

  confirm-matrix-success:
    runs-on: ubuntu-latest

    needs:
    - determine-available-userenvs
    - display-available-userenvs
    - run-the-userenvs

    steps:
    - name: Success Confirmation
      run: echo "${{ toJSON(needs.determine-available-userenvs.outputs) }}"
